name: Opus Build Matrix

on:
  push:
    branches-ignore: 
      - '**'
    tags:
      - 'v*'

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  CMakeBuild:
    needs: Release
    name: CMake/${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows/Lib/X64/Release",
            os: windows-latest,
            config: Release,
            args: -G "Visual Studio 17 2022" -A Win32,
            output: "Opus-1.3-win32.tar.gz"
          }
        - {
            name: "Linux/Lib/X64/Release",
            os: ubuntu-latest,
            config: Release,
            args: "",
            output: "Opus-1.3-Linux.tar.gz"
          }
        - {
            name: "MacOSX/Lib/X64/Release",
            os: macos-latest,
            config: Release,
            args: "",
            output: "Opus-1.3-Darwin.tar.gz"
          }
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        # Now we need at least CMake 3.15 to use the cmake --install command
        # Current linux build nodes only have 3.12
      - name: Install CMake 3.16 on Linux
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          curl -sL https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.sh -o cmakeinstall.sh
          chmod +x cmakeinstall.sh
          sudo ./cmakeinstall.sh --prefix=/usr/local --exclude-subdir
          rm cmakeinstall.sh
      - name: Create Work Dir
        run: mkdir build
      - name: Configure
        working-directory: ./build
        run: cmake .. ${{ matrix.config.args }} -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON
      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config ${{ matrix.config.config }} --target package

      - name: Upload library
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.Release.steps.create_release.outputs.upload_url }}
          asset_path: ./build/${{ matrix.config.config }}
          asset_name: ${{ matrix.config.config }}
          asset_content_type: application/octet-stream